extend type Query {
    cards(first: Int, after: String, last: Int, before: String): Connection!
}

extend type Mutation {
    addCard(input: AddCardInput!): AddCardPayload
}

enum CardStatus {
    TODO
    DOING
    DONE
}

type Card implements Node {
    id: ID!
    title: String!
    status: CardStatus!
    assignedUser: User
}

input AddCardInput {
    title: String!
    userId: ID
}

type AddCardPayload {
    id: ID!
}